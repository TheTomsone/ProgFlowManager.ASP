@using ProgFlowManager.BLL.Models.Programs;
@using ProgFlowManager.Requester.API;
@model ProgFlowManager.ASP.Models.Programs.ContentViewModel
@inject GenericAPIRequester _requester;

@{
    ViewData["Title"] = "CreateContent";
}

<h1>CreateContent</h1>

<h4>ContentViewModel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="CreateContent">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Resume" class="control-label"></label>
                <input asp-for="Resume" class="form-control" />
                <span asp-validation-for="Resume" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="StageId" class="control-label"></label>
                <select asp-for="StageId" class="form-control">
                    @foreach (var item in _requester.Get<IEnumerable<Stage>>("Stage").Where(s => s.Id % 100 == 0))
                    {
                        <option value="@item.Id">@item.Label</option>
                    }
                </select>
            </div>
            <div class="form-group">
                <input asp-for="VersionNbId" value="@Model.VersionNbId" type="hidden" />
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
